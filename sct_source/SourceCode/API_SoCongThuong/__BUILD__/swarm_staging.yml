version: '3.9'

networks:
  gateway-network:
    external: true
  kafka-network:
    external: true
  redis-network:
    external: true

services:
  api:
    image: ${REGISTRY_HOST}/${REGISTRY_PUBLISHER}/${PROJECT_NAME}:latest
    networks:
      - gateway-network
      - redis-network
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ConnectionStrings__DefaultConnection: ${connectionString_staging}
      REDIS_PASS: ${REDIS_PASS}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: ${REDIS_HOST}
      PASSWORD_ED: ${PASSWORD_ED}
      API_CONVERT_PDF: ${API_CONVERT_PDF}
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        failure_action: rollback
        order: start-first
      labels:
        - traefik.enable=true
        - traefik.docker.network=gateway-network
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${PROJECT_NAME}-http.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
        - traefik.http.routers.${PROJECT_NAME}-http.entrypoints=http
        #- traefik.http.routers.${PROJECT_NAME}-http.middlewares=https-redirect
        #- traefik.http.routers.${PROJECT_NAME}-https.rule=Host(`${SUBDOMAIN}.${DOMAIN}`)
        #- traefik.http.routers.${PROJECT_NAME}-https.entrypoints=https
        #- traefik.http.routers.${PROJECT_NAME}-https.tls=true
        #- traefik.http.routers.${PROJECT_NAME}-https.tls.certresolver=le
        - traefik.http.services.${PROJECT_NAME}.loadbalancer.server.port=80